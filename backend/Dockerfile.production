# Production Dockerfile for Passive CAPTCHA Backend
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy requirements first for better caching
COPY requirements.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Copy production entrypoint script and set permissions
COPY docker-entrypoint.production.sh /app/
RUN chmod +x /app/docker-entrypoint.production.sh

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/tmp && \
    chown -R appuser:appuser /app

# Copy ML models (if they exist)
COPY models/ /app/models/

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=app.production_app:create_production_app
ENV WEB_CONCURRENCY=4
ENV WORKER_TIMEOUT=120
ENV MAX_WORKERS=8

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:${PORT:-5000}/health || exit 1

# Switch to non-root user
USER appuser

# Expose port (Railway will override this)
EXPOSE ${PORT:-5000}

ENTRYPOINT ["/app/docker-entrypoint.production.sh"]