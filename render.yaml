services:
  # Backend Flask API Service
  - type: web
    name: passive-captcha-backend
    runtime: python3
    plan: starter  # Use starter plan, can upgrade later
    rootDir: backend
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements-deploy.txt
    startCommand: gunicorn app:app --bind 0.0.0.0:$PORT --workers 2 --timeout 120 --max-requests 1000 --preload
    healthCheckPath: /health
    envVars:
      - key: FLASK_ENV
        value: production
      - key: MODEL_PATH
        value: models/passive_captcha_rf.pkl
      - key: SCALER_PATH  
        value: models/passive_captcha_rf_scaler.pkl
      - key: DATABASE_URL
        value: sqlite:///passive_captcha.db
      - key: CONFIDENCE_THRESHOLD
        value: "0.6"
      - key: RATE_LIMIT_REQUESTS
        value: "100"
      - key: ALLOWED_ORIGINS
        value: "*"
      - key: SECRET_KEY
        generateValue: true
      - key: ADMIN_SECRET
        generateValue: true

  # Frontend Static Site
  - type: static
    name: passive-captcha-frontend
    rootDir: frontend
    buildCommand: |
      npm ci
      npm run build
    staticPublishPath: dist
    pullRequestPreviewsEnabled: true
    headers:
      - path: "/*"
        name: X-Frame-Options
        value: DENY
      - path: "/*"
        name: X-Content-Type-Options
        value: nosniff
      - path: "/passive-captcha.js"
        name: Access-Control-Allow-Origin
        value: "*"
      - path: "/passive-captcha.js"
        name: Cache-Control
        value: "public, max-age=31536000"
    routes:
      - type: rewrite
        source: "/*"
        destination: "/index.html"
      - type: rewrite
        source: "/demo"
        destination: "/demo/index.html"

databases:
  # PostgreSQL database for production (optional upgrade from SQLite)
  # - name: passive-captcha-db
  #   plan: starter
  #   databaseName: passive_captcha
  #   user: passive_captcha_user 