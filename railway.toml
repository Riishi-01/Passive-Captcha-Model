[build]
builder = "DOCKERFILE"
dockerfilePath = "backend/Dockerfile.production"

[deploy]
healthcheckPath = "/health"
healthcheckTimeout = 300
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 3

[[services]]
name = "passive-captcha-backend"

[services.source]
repo = "Riishi-01/Passive-Captcha-Model"
branch = "main"

[services.build]
builder = "DOCKERFILE"
dockerfilePath = "backend/Dockerfile.production"
buildCommand = "cd backend && pip install -r requirements.txt"

[services.deploy]
startCommand = "cd backend && python main.py --host 0.0.0.0 --port $PORT --gunicorn"
healthcheckPath = "/health"
healthcheckTimeout = 300
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 3

# Environment Variables
[services.variables]
ENV = "production"
FLASK_ENV = "production"
PYTHONPATH = "/app/backend"
API_BASE_URL = "${{RAILWAY_PUBLIC_DOMAIN}}"
ALLOWED_ORIGINS = "${{RAILWAY_PUBLIC_DOMAIN}},https://*.railway.app"

# Database
DATABASE_URL = "${{DATABASE_URL}}"

# Redis (optional - will fall back to in-memory if not available)
REDIS_URL = "${{REDIS_URL}}"

# Authentication
JWT_SECRET = "${{JWT_SECRET}}"
ADMIN_SECRET = "${{ADMIN_SECRET}}"

# ML Model paths
MODEL_PATH = "models/passive_captcha_rf.pkl"
SCALER_PATH = "models/passive_captcha_rf_scaler.pkl"

# Logging
LOG_LEVEL = "INFO"
STRUCTURED_LOGGING = "true"

# Rate limiting
RATE_LIMIT_ENABLED = "true"
RATE_LIMIT_PER_MINUTE = "60"

# Script generation
SCRIPT_VERSION_DEFAULT = "v2_enhanced"
SCRIPT_CACHE_TTL = "3600"

[[services]]
name = "passive-captcha-frontend"

[services.source]
repo = "Riishi-01/Passive-Captcha-Model" 
branch = "main"

[services.build]
builder = "DOCKERFILE"
dockerfilePath = "frontend/Dockerfile.production"
buildCommand = "cd frontend && npm ci && npm run build"

[services.deploy]
startCommand = "nginx -g 'daemon off;'"
healthcheckPath = "/"
healthcheckTimeout = 60

# Frontend Environment Variables
[services.variables]
NODE_ENV = "production"
VITE_API_URL = "https://${{RAILWAY_PUBLIC_DOMAIN}}"
VITE_WS_URL = "wss://${{RAILWAY_PUBLIC_DOMAIN}}"